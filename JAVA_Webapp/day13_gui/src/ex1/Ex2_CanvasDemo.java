/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ex1;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author KOSTA
 */
public class Ex2_CanvasDemo extends javax.swing.JFrame implements Runnable{ //스레드를 사용해야 하는데 상속은 받지 못하는 상황에서 사용하는 방법중 하나인 Runnable 인터페이스 구현.
                                                                              //해당 방식은 run 메소드를 오버라이딩 해야 한다.
    
    private int arcNum=0;              //스레드들이 원을 다 그리고 나면 다음 스레드가 그림을 그릴 시 초기화된 시작점을 쓰게 하기 위해 
                                       //인스턴스 변수로 선언하여 작업 종료 후 값을 변경하고, 그 변경된 값을 사용할 수 있도록 함.  
    private int x,y;                   //마찬가지로 한 스레드가 원을 다 그리면 다음 스레드가 다른 위치로 그림을 그리게 하기 위해 인스턴스 변수로 선언.
    
    Thread t1,t2;                      //스레드객체를 생성자에서 생성한 후 참조변수를 메인메소드에서 사용하기 위해 인스턴스변수로 선언.
    public Ex2_CanvasDemo() {
        initComponents();
        t1= new Thread(this);           //
        t2 = new Thread(this){
            public void run(){
                System.out.println("2");
                x = 300;
                y = 100;
                for(; arcNum<=360; arcNum+=10){
                System.out.println("arcNum1 :"+arcNum);
                try {
                    Thread.sleep(50);
                     //Canvas 의 repaint() -> update() -> paint()
                     canvas1.repaint();
                } catch (InterruptedException ex) {
                }
                }
                arcNum = 0;
            } 
        };
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas(){

            @Override
            public void update(Graphics g) {
                paint(g);
            }
            @Override
            public void paint(Graphics g) {
                g.setColor(Color.red);
                g.drawArc(x, y, 100, 100, 0, arcNum);
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        canvas1.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public Thread threadRun(){
        Thread thread = new Thread(this){
            public void run(){
                System.out.println("3");
                x = 400;
                y = 100;
                for(; arcNum<=360; arcNum+=10){
                System.out.println("arcNum1 :"+arcNum);
                try {
                    Thread.sleep(50);
                     //Canvas 의 repaint() -> update() -> paint()
                     canvas1.repaint();
                } catch (InterruptedException ex) {
                }
                }
                arcNum = 0;
            } 
        };
        return thread;
    }
    public static void main(String args[]) throws InterruptedException {
        Ex2_CanvasDemo ex = new Ex2_CanvasDemo();
        Thread t4 = ex.threadRun();
       
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              ex.setVisible(true);
            }
        });
        
        ex.t1.start();
        ex.t1.join();
        ex.t2.start();
        ex.t2.join();
       
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void run(){
        System.out.println("11");
        x = 100; y = 100;
        for(; arcNum<=360; arcNum+=10){
            System.out.println("arcNum :"+arcNum);
            try {
                Thread.sleep(50);
                 //Canvas 의 repaint() -> update() -> paint()
                 canvas1.repaint();
            } catch (InterruptedException ex) {
            }
            
    }
        arcNum =0;
      
                 
           //while문으로도 바꿔볼까
           
//           while(true){
//               arcNum += 10;
//               if(arcNum>=370){
//                   break;
//               }
//               System.out.println("arcNum :"+arcNum);
//         
//                try {
//                Thread.sleep(100);
//                
//                //Canvas 의 repaint() -> update() -> paint()
//                canvas1.repaint();
//                } catch (InterruptedException ex) {
//            }
//               
//         }
        
    }


}
